version: "2.0"

intents:
  # ---Generales---
  - affirm
  - deny
  - greet
  - goodbye
  - no_entiendo

  # ---Introduccion---
  - proceso_scrum

  # ---ProductBacklog---
  - product_backlog
  - product_owner
  - epica

  # ---SprintPlanning---
  - scrum_master
  - sprint_backlog
  - disenio_backlog
  - user_story
  - tarea

  # ---SprintDesarrollo---
  - development_team
  - daily_meeting
  - scrum_board

  # ---SprintFin---
  - sprint_review
  - increment
  - burndown_chart
  - sprint_retrospective

#  - que_es_scrum
#  - que_es_un_framework
#  - roles
#  - scrum_team
#  - artefactos
#  - es_una_metodologia
#  - trabajo_scrum_master
#  - trabajo_desarrollador
#  - sprint_backlog
#  - incremento
#  - que_hacer_etapa
#  - get_rol
#  - eventos
#  - sprint_planning
#  - daily_meeting
#  - sprint_review
#  - sprint_retrospective
#  - sprint_grooming
#  - user_story
#  - epica
#  - tarea_tecnica
#  - diseño_backlog
#  - repetir_que_es_scrum
#  - repetir_roles
#  - repetir_artefactos
#  - repetir_eventos
#  - get_tema
#  - teoria_scrum
#  - scrum_board
#  - diseño_scrum_board

#entities:

# slots:

#actions:

responses:
  # ---Generales---

  utter_greet:
    - text: "¡Hola! Estoy aquí para guiarte en el proceso Scrum. ¿Querés realizar un recorrido?"

  utter_end_tour:
    - text: "Eso es todo, ante cualquier duda que tengas sobre Scrum ya sabes donde encontrarme."

  utter_goodbye:
    - text: "Adiós!"
    - text: "Hasta pronto!"

  # ---Introduccion---

  utter_proceso_scrum:
    - text: "En Scrum un proyecto se ejecuta en Sprints. Cada Sprint tiene que 
    proporcionar un resultado completo, un incremento de producto final que sea 
    susceptible de ser entregado con el mínimo esfuerzo
    al cliente cuando lo solicite. El proceso parte de la lista de requisitos
    priorizada del producto, que actúa como plan del proyecto. En esta lista el
    Product Owner prioriza los objetivos balanceando el valor que le aportan
    respecto a su coste y quedan repartidos en iteraciones y entregas.
    \nQuerés continuar con la explicación del Product Backlog?"

  utter_proceso_scrum_2:
    - text: "Como mencioné antes, Scrum es un marco de trabajo que se ejecuta en Sprints. 
    Estos son ciclos temporales cortos y de duración fija, normalmente duran entre 2 y 4 semanas.
    Al final de cada Sprint se debe obtener un incremento de producto final para 
    ser entregado al cliente cuando lo solicite. 
    El proceso comienza con la planificación del Sprint, durante esta actividad el cliente 
    presenta la lista de requisitos del producto y el equipo selecciona los más 
    prioritarios que prevé que podrá completar en la iteración. Además, elabora la lista 
    de tareas necesarias para desarrollar los requisitos seleccionados,
    que luego se llevan a cado durante la ejecución del Sprint. 
    El último dia de la iteración se realiza la reunión de revisión, en la cual 
    el equipo presenta al cliente los requisitos completados, en forma de incremento 
    de producto, y se realiza una retrospectiva para reflexionar sobre el último Sprint 
    e identificar posibles mejoras para el próximo.
    \nEntendiste, te parece que avancemos?"

  # ---ProductBacklog---

  utter_product_backlog:
    - text: "El Product Backlog es un inventario que contiene cualquier tipo de
    trabajo que haya que hacer en el producto: requerimientos, casos de uso,
    tareas y dependencias. El Product Backlog debe ser gestionado en exclusiva 
    por el Product Owner.
    \nContinuo con la siguiente explicación?"

  utter_product_backlog_2:
    - text: "El Product Backlog básicamente es una lista, en cualquier formato, que 
    contiene todos los requerimientos que necesitamos implementar en el producto. 
    Es la principal fuente de información sobre el producto en Scrum.
    \nEntendiste?"

  utter_product_owner:
    - text: "El Product Owner representa a los stakeholders. Es el encargado de 
    optimizar y maximizar el valor del producto, siendo la persona encargada de 
    gestionar el flujo de valor del producto a través del Product Backlog. 
    El Product Owner es un perfil con capacidad de visión de negocio, así como 
    habilidades sociales para la entrevista, como puede ser el uso de preguntas 
    abiertas, la empatía y la reformulación. Es un rol que está muy pegado al 
    negocio a través de los clientes o a personas que tienen relación con ellos.
    \nContinuo con la explicación que sigue?"
    
  utter_product_owner_2:
    - text: "Como mencione antes, el Product Owner representa los stakeholders, 
    estas son las personas que hacen posible el proyecto y para quienes el proyecto 
    producirá el beneficio acordado que justifica su desarrollo, por ejemplo: clientes,
    proveedores, etc. Es un rol que está muy pegado al negocio a través de los 
    clientes o a personas que tienen relación con ellos, debe descubrir sus 
    necesidades y buscar soluciones a las mismas. Para ello utiliza el Product Backlog, 
    donde se detalla qué debe realizarse para cubrir esa necesidad. Cada elemento del 
    Product Backlog es un aporte de valor completo para el cliente.
    \nContinuo con el tour?"

  utter_epica:
    - text: "Una Épica es un conjunto de trabajo grande que puede dividirse en
    historias de usuario en función de las necesidades o solicitudes de los
    clientes o usuarios finales. Implementar una épica suele llevar dos o más
    sprints.
    \nEntendiste, avanzo hacia la etapa de Sprint Planning?"

  utter_epica_2:
    - text: "Una Épica puede visualizarse como una historia de usuario que aún no 
    se ha detallado, es demasiado grande o todavía presenta mucha incertidumbre y, 
    por lo tanto, no se puede transformar en un incremento del producto. Debe dividirse 
    en User Stories más pequeñas.
    \nEntendiste?"

  # ---SprintPlanning---

  utter_scrum_master:
    - text: "El Scrum Master es el responsable de que Scrum sea entendido y bien aplicado 
    dentro de la organización. Tiene dos funciones principales dentro del marco de
    trabajo: gestionar el proceso Scrum y ayudar a eliminar impedimentos que puedan 
    afectar a la entrega del producto. 
    Además, se encarga de las labores de mentoring y formación, coaching y de
    facilitar reuniones y eventos si es necesario.
    \nQuerés seguir con el tour?"

  utter_scrum_master_2:
    - text: "El Scrum Master es básicamente un entrenador y facilitador de equipos Scrum.
    Para que entiendas que hace la persona con este rol te voy a explicar sus dos
    funciones principales mas detalladamente: \n
    Gestionar el proceso Scrum: el Scrum Master se encarga de gestionar y asegurar 
    que el proceso Scrum se lleva a cabo correctamente, así como de facilitar la 
    ejecución del proceso y sus mecánicas. \n
    
    Eliminar impedimentos: esta función del Scrum Master indica la necesidad de
    ayudar a eliminar progresiva y constantemente impedimentos que van surgiendo
    en la organización y que afectan a su capacidad para entregar valor, así como
    a la integridad de esta metodología.
    \nTe parece que siga con el recorrido?"

  utter_sprint_backlog:
    - text: "El Sprint Backlog es un elemento para visualizar el trabajo a realizar
    durante cada Sprint y está gestionado por el equipo de desarrollo. Su
    propósito es mantener la transparencia dentro del desarrollo, actualizándolo
    durante toda la iteración especialmente a través de los daily Scrums.
    \nEntendiste lo que es el sprint backlog?"

  utter_sprint_backlog_2:
    - text: "El Sprint Backlog es el conjunto de tareas seleccionadas del Product 
    Backlog durante el sprint planning para el Sprint actual, es decir, las tareas 
    necesarias para realizar un incremento de producto. En este artefacto para 
    cada uno de los requisitos se muestran sus tareas, el esfuerzo pendiente para 
    finalizarlas y la autoasignación inicial que se han hecho los miembros del equipo.
    También permite ver con que tareas el equipo esta teniendo problemas y no puede 
    avanzar para poder tomar decisiones al respecto.
    \nSigo con el recorrido?"

  utter_disenio_backlog:
    - text: "Para el diseño del backlog se siguen lo siguientes pasos: \n
    En primer lugar, se definen los temas. Estos deben ser generales y cada uno
    de ellos puede ser parte de distintas iniciativas.\n

    Luego se definen las iniciativas u objetivos comunes relacionado con un tema.
    Puede ser que una misma iniciativa comparta dos temas. \n

    A continuacion se definen todas las épicas que se requieren para perseguir
    ese objetivo en común que hemos marcado en el tema. Este proceso se realiza
    en conjunto con los requerimientos de los clientes.\n

    En cuarto lugar se divide cada épica en historias de usuarios. En este paso,
    es fundamental la colaboración del cliente, es necesario ponerse en su lugar
    para adaptarse a lo que el quiere hacer, tal y como él mismo lo solicite. \n

    Por ultimo se dividen a su vez las historias de usuario definidas en el paso
    anterior en tareas o actividades para ejecutarlas. El equipo de desarrollo
    seguirá estas tareas, por ejemplo, en un Scrum Board. Se seleccionan así las
    tareas del backlog para ese Sprint o iteración.
    \nContinuamos o necesitas un ejemplo?"

  utter_disenio_backlog_2:
    - text: "Para que entiendas el proceso para diseñar el backlog, tenes que tener 
    en cuenta que: \n
    En primer lugar se definen los temas e iniciativas, piensa esto como objetivos 
    a largo plazo con un enfoque más amplio que tendrá un impacto más significativo 
    en el rendimiento de tu empresa. Para que esto sea mas claro, Supongamos que deseas 
    entrar en un nuevo mercado, por ejemplo, el mercado de software de gestión de proyectos. 
    Puedes dividir esto en proyectos más pequeños y procesables. Así que entrar en el 
    mercado de software de gestión de proyectos es tu iniciativa ágil/tema de alto nivel. 
    Ahora tienes que descomponerlo y hacerlo procesable.
    
    A continuación definimos las épicas que on grandes elementos de trabajo, que pueden 
    ser los pilares de las iniciativas/temas mencionados anteriormente. Ahora, vamos a desglosar 
    ese objetivo en dos épicas que son: \n
    Nuevas características: desarrollar nuevas características para la gestión de proyectos Agile. \n
    Mejorar nuestras características actuales para que sean adecuadas para los gerentes de proyecto. \n
        
    Por último, cuando tienes una épica necesitas desglosarla en pequeñas solicitudes que 
    irán entrando relatiivamente rápido en tu flujo de trabajo. Volviendo al ejemplo, 
    vamos a dividir la épica definida en el paso anterior 'Desarrollar nuevas características 
    para la gestión de proyectos Agile': \n
      Herramientas de investigación PM.\n
      Nuevas características diseño/concepto.\n
      Desarrollo de nuevas características.\n
    
    La realización de todas estas pequeñas tareas te ayudará a completar la épica. Por otro 
    lado, completar las iniciativas te ayudará a acercarte un paso más al objetivo del 
    tema/iniciativa.
    \nQuerés seguir con el recorrido?"

  utter_user_story:
    - text: "Una historia de usuario es la descripción funcional utilizada en las
    metodologías ágiles para especificar el desarrollo de una característica.
    Estas definen lo que se debe construir en el proyecto de software, tienen una
    prioridad asociada definida por el cliente de manera de indicar cuales son
    las más importantes para el resultado final, serán divididas en tareas y su
    tiempo será estimado por los desarrolladores.
    \nEntendiste lo que es una historia de usuario?"

  utter_user_story_2:
    - text: "Las historias de usuario son descripciones cortas y simples de una 
    característica contada desde la perspectiva de la persona que desea la nueva 
    capacidad, generalmente un usuario o cliente del sistema. Por lo general, siguen 
    una plantilla simple:\n
    \t Como <usuario> quiero <algún objetivo> para que <motivo> \n
    Por ejemplo, las historias de usuario pueden tener este aspecto: Como gestor, quiero 
    poder comprender el progreso de mis compañeros, para poder informar sobre nuestros 
    éxitos y fallos. Esta estructura no es obligatoria, pero resulta de ayuda 
    para establecer una definición de Done. Cuando ese perfil puede alcanzar su valor 
    deseado, la historia está completa.
    \nQuerés seguir con el recorrido?"

  utter_tarea:
    - text: "Las tareas son elementos técnicos necesarios para que una
    Historia de Usuario se transforme en un incremento del producto.
    \nTe parece que siga?"

  utter_tarea_2:
    - text: "Una tarea es una unidad de trabajo necesaria para terminar una historia. 
    Para producir una historia, el equipo necesita realizar actividades estructuradas 
    como Tareas. Una tarea no es parte del resultado del proyecto, es más bien el medio 
    para producir el resultado. Por ejemplo en la historia de usuario: 
    Como usuario quiero buscar en las ofertas de trabajo para ver cuales me interesan, 
    podemos identificar las siguientes tareas técnicas: \n
    Crear UI de presentación de resultados.\n
    Crear los métodos de consulta a BBDD para que retornen resultados.\n
    Mostrar un mensaje si no se encuentran resultados con los criterios de búsqueda.
    \nEntendiste, avazamos hacia la etapa de desarrollo del Sprint?"

  # ---SprintDesarrollo---

  utter_development_team:
    - text: "El Development Team es un equipo multidisciplinar. Consiste en un
    grupo de personas con las habilidades necesarias para transformar todos
    los ítems del Product Backlog en incrementos de desarrollo. La
    responsabilidad es exclusivamente de ellos ya que son los únicos que pueden
    crear estos incrementos. Es un equipo estructurado y empoderado dentro de
    la organización para auto-organizarse y gestionar su propio trabajo. Esto
    se traduce en un equipo óptimo tanto en eficiencia como en productividad.
    \nContinuo con la definición de daily meeting?"

  utter_development_team_2:
    - text: "El Development Team es un grupo de personade que trabajan juntas para
    entregar los incrementos de productos requeridos en cada Sprint. Generalmente son 
    entre 5 y 9 miembros. Las habilidades específicas que necesitan suelen ser amplias 
    y variarán según el contexto de su trabajo. Sin embargo, los Developers siempre 
    son responsables de: Crear un plan para el Sprint, inculcar calidad al adherirse a una
    Defición de Done, adaptar su plan cada día hacia el Objetivo del Sprint y responsabilizarse 
    mutuamente como profesionales.
    \nEntendiste?"

  utter_daily_meeting:
    - text: "El Daily Scrum o Daily Meeting es una reunión diaria de 15 minutos fijos, 
    independientemente de la duración del Sprint. Su objetivo es evaluar diariamente el 
    progreso y la tendencia del progreso hasta la finalización del Sprint, sincronizando 
    las actividades y creando un plan para las próximas 24 horas.
    \nContino hacia la siguiente explicación o necesitas que te explique devuelta?"
  
  utter_daily_meeting_2:
    - text: "La Daily Scrum o Daily Meeting, como ya mencione, es una reunión diaria de 
    15 minutos en la que participa exclusivamente el Development Team. En esta reunión
    todas y cada una de las personas del Development Team responden a las
    siguientes preguntas: \n
    ¿Qué hice ayer para contribuir al Sprint Goal? \n
    ¿Qué voy a hacer hoy para contribuir al Sprint Goal? \n
    ¿Tengo algún impedimento que me impida entregar? \n
    Esta reunión permite la inspección y adaptación a través de la
    auto-organización del equipo.
    \nContinuamos hacia el scrum board?"

  utter_scrum_board:
    - text: "El Scrum Board un artefacto que permite organizar la gestión de un proyecto.
    Cuenta con columnas que indican el estado de cada tarea y sirve para:\n
    Dividir el proyecto en fases bien definidas. \n

    Conocer la efectividad del equipo.\n

    Monitorear el desarrollo de las tareas, de acuerdo con los objetivos de
    cada iteración.\n

    Aplicar cambios para obtener los resultados esperados.\n

    Dinamizar la actividad.
    \nEntendiste?"

  utter_scrum_board_2:
    - text: "El Scrum Board es el tablero que mantenemos en Scrum como soporte visual. 
    En nuestro caso, contamos con un tablero físico conformado por columnas con las tareas 
    a realizar, las tareas en progreso y las tareas finalizadas.
    \nQuerés continuar hacia la etapa final del Sprint?"  #################### VER QUE MAS HAY EN EL TABLERO #########################

    # ---Sprint.Fin---

  utter_sprint_review:
    - text: "El Sprint Review es la reunión que ocurre al final del Sprint
    donde el Product Owner y el Develpment Team presentan a los stakeholders
    el incremento terminado para su inspección y adaptación correspondientes.
    En esta reunión se estudia cuál es la situación y se actualiza el Product
    Backlog con las nuevas condiciones que puedan afectar al negocio.\n 
    La duración estimada en el estándar para un Sprint Review es de 8 horas
    para un Sprint de 4 semanas, aunque habitualmente estas reuniones se
    ejecutan en un entorno de entre 2 y 3 horas.
    \nEntendiste que ocurre en una Sprint Review?"

  utter_sprint_review_2:
    - text: "El Sprint Review, como ya te mencione, es una reunión que ocurre 
    al final del Sprint. 
    Durante la misma, se revisará el incremento terminado. Se mostrará el software
    funcionando en producción y los stakeholders tendrán la oportunidad de
    hacer cuantas preguntas estimen oportunas sobre el mismo. El software
    funcionando ha sido validado previamente por el product owner, que se ha
    encargado de trabajar con el equipo durante el Sprint para asegurarse que
    cumple con la Definition of Done y, efectivamente, hace que el Sprint Goal
    sea válido. \n 

    El equipo de desarrollo comenta posteriormente qué ha ocurrido durante el
    Sprint, los impedimentos que se han encontrado, así como soluciones tomadas
    y actualizan a los stakeholders con la situación del equipo.\n

    Por último, el product owner actualiza, con la información de negocio
    recibida en esta reunión, el Product Backlog para el siguiente Sprint.
    \nTe parece bien si avanzo hacia la siguiente explicación?"

  utter_increment:
    - text: "Un Incremento es el resultado del Sprint, es la suma de todos los ítems del 
    Product Backlog (PBIs) completados durante un Sprint el valor de los incrementos de 
    todos los Sprints pasados.
    \nAvanzo hacia el siguiente tema?"

  utter_increment_2:
    - text: "Un incremento es es la suma de todas las tareas, casos de uso, historias 
    de usuario y cualquier elemento que se haya
    desarrollado durante el Sprint y que será puesto a disposición del usuario
    final en forma de software, aportando un valor de negocio al producto que
    se está desarrollando.
    \nAhora si te quedo claro?"             #################### HAY UN INCREMENT PARA VER ?? #########################

  utter_burndown_chart:
    - text: "Burdown Chart es un gráfico de trabajo pendiente a lo largo del tiempo que 
    muestra la velocidad a la que se están completando los objetivos, requisitos, 
    o historias de usuarios.
    \nQueres saber mas sobre este gráfico o avanzo a la siguiente explicación?"

  utter_burndown_chart_2:
    - text: "Es una representación gráfica del trabajo por hacer en un proyecto en el 
    tiempo. Usualmente el trabajo remanente (o backlog) se muestra en el eje vertical 
    y el tiempo en el eje horizontal. Este diagrama es útil para predecir cuándo se 
    completará todo el trabajo.
    \nAhora si continuo hacia el siguiente tema?"        #################### HAY UN BURNDOWN PARA VER ?? #########################

  utter_sprint_retrospective:
    - text: "La retrospectiva ocurre al final del Sprint, justo después del
    Sprint Review. El objetivo de la retrospectiva es hacer de reflexión sobre
    el último Sprint e identificar posibles mejoras para el próximo.\n

    La duración recomendada por Scrum para un Sprint de 4 semanas es de un
    máximo de 3 horas, aunque habitualmente se destina entre 1 y 2 horas a este
    evento.
    \nEntendiste lo que ocurre en una retrospectiva?"

  utter_sprint_retrospective_2:
    - text: "La retropectiva, en otras palabras, es una reunión que se realiza al 
    final del Sprint para inspeccionar el equipo y levantar mejoras que se apliquen en el 
    siguiente Sprint. Un formato común es analizar qué ha ido bien durante el Sprint, qué 
    ha fallado y qué se puede mejorar. Este formato se puede facilitar pidiendo a los 
    miembros del equipo Scrum que escriban notas para luego agruparlas y votar aquellos 
    ítems más relevantes, dando la oportunidad a todos de hablar y expresar sus inquietudes.
    \nEntendiste?"
